name: Deploy React App to OCI

on:
  push:
    branches:
      - main

jobs:
  build-push-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.7.1

      - name: Log in to Docker Hub
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v5.3.0
        with:
          file: ./Dockerfile
          push: true
          tags: |
            jeanmichelbb/oci-react:latest

  restart:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Configure OCI CLI
        env:
          OCI_USER_OCID: ${{ secrets.OCI_USER_OCID }}
          OCI_TENANCY_OCID: ${{ secrets.OCI_TENANCY_OCID }}
          OCI_REGION: ${{ secrets.OCI_REGION }}
          OCI_PRIVATE_KEY: ${{ secrets.OCI_PRIVATE_KEY }}
          OCI_KEY_FINGERPRINT: ${{ secrets.OCI_KEY_FINGERPRINT }}
          OCI_COMPARTMENT_OCID: ${{ secrets.OCI_COMPARTMENT_OCID }}
        run: |
          set -e  # Exit on error
          mkdir -p ~/.oci
          echo "[DEFAULT]" > ~/.oci/config
          echo "user=${OCI_USER_OCID}" >> ~/.oci/config
          echo "fingerprint=${OCI_KEY_FINGERPRINT}" >> ~/.oci/config
          echo "key_file=${OCI_PRIVATE_KEY}" >> ~/.oci/config
          echo "tenancy=${OCI_TENANCY_OCID}" >> ~/.oci/config
          echo "region=${OCI_REGION}" >> ~/.oci/config
          echo "compartment=${OCI_COMPARTMENT_OCID}" >> ~/.oci/config
          echo "‚úÖ OCI CLI configured successfully."

      - name: Get Instance OCID
        uses: oracle-actions/run-oci-cli-command@v1.3.2
        id: get-instance-ocid
        with:
          command: "oci compute instance list --compartment-id ${OCI_COMPARTMENT_OCID} --region ${OCI_REGION}"
          query: "data[?\"display-name\"=='my-instance'].id | [0]"

      - name: Verify Instance OCID
        run: |
          if [ -z "${{ steps.get-instance-ocid.outputs.raw_output }}" ]; then
            echo "‚ùå Instance OCID not found. Check if 'my-instance' exists."
            exit 1
          else
            echo "‚úÖ Instance OCID retrieved: ${{ steps.get-instance-ocid.outputs.raw_output }}"
          fi

      - name: Restart the service
        run: |
          set -e  # Exit on error
          echo "üîÑ Restarting instance..."
          oci compute instance action \
            --action SOFTRESET \
            --instance-id ${{ steps.get-instance-ocid.outputs.raw_output }} \
            --region ${OCI_REGION} \
            || (echo "‚ùå Failed to restart instance." && exit 1)
          echo "‚úÖ Instance restarted successfully."